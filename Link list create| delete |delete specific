#include <iostream> using namespace std;

struct Node { int data; Node* next;
};


Node* head = nullptr
 
void addFront(int data) {
Node* newNode = new Node(); newNode->data = data; newNode->next = head;
head = newNode;
}


void deleteFront() {
if (head == nullptr) return; Node* temp = head;
head = head->next; delete temp;
}


void deleteNode(int key) { Node* temp = head; Node* prev = nullptr;

if (temp != nullptr && temp->data == key) { head = temp->next;
 
delete temp; return;
}


while (temp != nullptr && temp->data != key) { prev = temp;
temp = temp->next;
}


if (temp == nullptr) return;


prev->next = temp->next; delete temp;
}


void display() { Node* temp = head;
while (temp != nullptr) { cout << temp->data << " "; temp = temp->next;
}
 
cout << endl;
}


int main() { int n;
cout << "Enter number of nodes to create: "; cin >> n;

cout << "Enter the values: "; for (int i = 0; i < n; i++) {
int data;
cin >> data; addFront(data);
}


cout << "Linked List: "; display();

cout << "Deleting front node\n"; deleteFront();
display();
 
cout << "Enter the value of the node to delete: "; int delNode;
cin >> delNode; deleteNode(delNode); display();

return 0;
}
